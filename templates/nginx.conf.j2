worker_processes 4;
worker_rlimit_nofile 40000;

events {
    worker_connections 8192;
}

http {
    server {
        listen         80;
        return 301 https://$host$request_uri;

        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_pass http://localhost:8081;
            client_max_body_size 20G;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # Pass the csrf token (see https://de.wikipedia.org/wiki/Cross-Site-Request-Forgery)
            # Default in Spring Boot and required. Without it nginx suppresses the value
            proxy_pass_header X-XSRF-TOKEN;
        }

        listen 8443 ssl;
        ssl_certificate /etc/certificate/cert.crt;
        ssl_certificate_key /etc/certificate/cert.key;
    }

    server {
        listen         80;
        return 301 https://$host$request_uri;

        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;
            proxy_set_header Host $http_host;
            proxy_pass http://localhost:80;
            client_max_body_size 20G;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # Pass the csrf token (see https://de.wikipedia.org/wiki/Cross-Site-Request-Forgery)
            # Default in Spring Boot and required. Without it nginx suppresses the value
            proxy_pass_header X-XSRF-TOKEN;
        }

        listen 443 ssl;
        ssl_certificate /etc/certificate/cert.crt;
        ssl_certificate_key /etc/certificate/cert.key;
    }
}
